#!/bin/bash
set -eu

VERSION="v0.0.3"

echo "property $VERSION - A tiny Bash script to get OS and other"
echo "software version info. https://github.com/rnazmo/property"

echo "============================================================"

OS_NAME=$(hostnamectl status | grep "Operating System:" | sed -e "s/ *Operating System: //")
OS_VERSION=$(grep "^VERSION=" /etc/os-release | sed 's/^.*"\(.*\)".*$/\1/')
BASH_VERSION=$(bash --version | head -n 1 | sed "s/GNU bash, version //")
ZSH_VERSION=$(zsh --version | sed "s/zsh //")
CPU_ARCH=$(hostnamectl status | grep "Architecture:" | sed -e "s/ *Architecture: //")
KERNEL=$(hostnamectl status | grep "Kernel:" | sed -e "s/ *Kernel: //")
CHASSIS=$(hostnamectl status | grep "Chassis:" | sed "s/ *Chassis: //")

DEFAULT_SHELL="Unknown"
if [[ "$SHELL" == *"/bash" ]]; then
  DEFAULT_SHELL="Bash"
elif [[ "$SHELL" == *"/zsh" ]]; then
  DEFAULT_SHELL="Zsh"
fi

# Print basic info
if true; then
  echo "OS NAME      : $OS_NAME"
  echo "OS VERSION   : $OS_VERSION"
  echo "Default Shell: $DEFAULT_SHELL"
  echo "Bash VERSION : $BASH_VERSION"
  echo "Zsh VERSION  : $ZSH_VERSION"
  echo "CPU ARCH     : $CPU_ARCH"
fi

# Print additional property (lower-layer)
# TODO: Add support options, and switch this with a option
if false; then
  echo "KERNEL       : $KERNEL"
  echo "CHASSIS      : $CHASSIS"
fi

# TODO: Print these if only "--full" option enabled
if false; then

  VERTUALIZATION="n/a"
  if [ "$CHASSIS" = "vm" ]; then
    VERTUALIZATION=$(hostnamectl status | grep "Vertualization:" | sed -e "s/ *Vertualization: //")
  fi

  APT_VERSION=$(apt --version | sed "s/apt //")

  GIT_VERSION=$(git --version | sed "s/git version //")
  TMUX_VERSION=$(tmux -V | sed "s/tmux //")

  GOLANG_VERSION=$(go version | sed "s/go version go//")
  NVM_VERSION=$(nvm --version)
  NPM_VERSION=$(npm --version)
  NODE_VERSION=$(node --version)
  PYTHON_VERSION=$(python --version | sed "s/Python //")
  RUBY_VERSION=$(ruby --version | sed "s/ruby //")

  VIM_VERSION=$(vim --version | head -1 | sed "s/VIM - Vi IMproved //")
  NEOVIM_VERSION=$(nvim --version | head -1 | sed "s/NVIM v//")
  VSCODE_VERSION=$(code --version | head -1)
  VSCODE_INSIDERS_VERSION=$(code-insiders --version | head -1)
fi

echo "============================================================"
